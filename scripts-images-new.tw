:: Background image support [script]
(function () {
    //Cross-browser (mobile) screen sizing
    window.isHandheld = function() {
        var w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
        var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
        if (Math.max(w, h) < 900) {
            return true;
        }
        return false;
    };
    //Alternate, principally to account for differences in reporting
    //between mobile Safari and iOS Chrome. Probably not needed.
    /* window.isHandheld = function() {
        var elem = insertElement(body, "div", "removeMe");
        var w = $(elem).width();
        var h = $(elem).height();
        $(elem).remove();
        if (Math.max(w, h) < 900) {
            return true;
        }
        return false;
    };
    */

    macros.add(["imageRotate"],  {
        version: {
            major: 1,
            minor: 0,
            revision: 0
        },
        handler: function() {
        	try {
                if (isHandheld() !== true) {
                    var imageName = "";
                    imageName = state.active.variables.backgrounds[state.active.title];
                    if (imageName) {
                    	$("#img-occluder").fadeIn("fast", function() {
                    		$("body").css("background-image", "url(" + imageName +")");
                    		$("#img-occluder").fadeOut("slow");
                    	});                   
                    }
                }
            } catch (e) {
                return this.error("Error: " + e.message);
            }
        }
    });

    //Preload images, from http://www.glorioustrainwrecks.com/node/4982
    var r = "";
    var s = Wikifier.formatters;
    for (var j = 0; j < s.length; j++) {
        if (s[j].name == "image") {
            r = s[j].lookahead;
            break;
        }
    }
    var div = document.getElementById("store-area").firstChild.nextSibling;
    while (div) {
        if (r) {
            k(new RegExp(r, "mg"), 4);
        }
        var b = String.fromCharCode(92);
        var u = b + "s*?['" + '"]?([^"' + "']+?(jpe?g|a?png|gif|bmp))['" + '"]?' + b + "s*";
        k(/['"]([^"']*\.(jpe?g|a?png|gif|bmp))['"]/mig, 1);
        k(new RegExp("url" + b + "(" + u + b + ")", "mig"), 1);
        //k(new RegExp("src" + b + "s*=" + u, "mig"), 1);
        div = div.nextSibling;
    }

    function k(c, e) {
        
        do {
            var d = c.exec(div.innerHTML);
            if (d) {
                if (d[e].indexOf("backgrounds/") > -1 && isHandheld()) continue;
                var i = new Image();
                i.src = d[e];
                console.log("Preloaded " + i.src);
            }
        } while (d);
    }
}());


jQuery.preloadCssImages = function(){
    var allImgs = [];//new array for all the image urls  
    var k = 0; //iterator for adding images
    var sheets = document.styleSheets;//array of stylesheets
    
    for(var i = 0; i<sheets .length; i++){//loop through each stylesheet
        var cssPile = '';//create large string of all css rules in sheet
        var csshref = (sheets[i].href) ? sheets[i].href : 'window.location.href';
        var baseURLarr = csshref.split('/');//split href at / to make array
        baseURLarr.pop();//remove file path from baseURL array
        var baseURL = baseURLarr.join('/');//create base url for the images in this sheet (css file's dir)
        if(baseURL!="") baseURL+='/'; //tack on a / if needed
        if(document.styleSheets[i].cssRules){//w3
            var thisSheetRules = document.styleSheets[i].cssRules; //w3
            for(var j = 0; j<thisSheetRules.length; j++){
                cssPile+= thisSheetRules[j].cssText;
            }
        }
        else {
            cssPile+= document.styleSheets[i].cssText;
        }
        
        //parse cssPile for image urls and load them into the DOM
        var imgUrls = cssPile.match(/[^\(]+\.(gif|jpg|jpeg|png)/g);//reg ex to get a string of between a "(" and a ".filename"
        if(imgUrls != null && imgUrls.length>0 && imgUrls != ''){//loop array
            var arr = jQuery.makeArray(imgUrls);//create array from regex obj    
            jQuery(arr).each(function(){
                allImgs[k] = new Image(); //new img obj
                allImgs[k].src = (this[0] == '/' || this.match('http://')) ? this : baseURL + this; //set src either absolute or rel to css dir
                k++;
            });
        }
    }//loop
    return allImgs;
}


